name: Deploy to AWS

on:
  release:
    types: [published]

env:
  AWS_REGION: ap-southeast-1
  ECR_REPOSITORY: duckhue01
  CONTAINER_NAME: simple-bank
  CLUSTER_NAME: duckhue01.k8s.local
  STATE_BUCKET: s3://duckhue01-state-bucket
  AWS_DEFAULT_REGION: ap-southeast-1

jobs:
  test:
    runs-on: ubuntu-latest
    name: run test
    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: simple-bank
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2

      - name: set up go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Install golang-migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate.linux-amd64 /usr/bin/migrate
          which migrate

      - name: Run migrations
        run: make migrateUp

      - name: test
        run: go test -v ./...
  build-push:
    name: Build and push image to AWS ECR
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: $ECR_REPOSITORY
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t latest .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install kubectl
        uses: azure/setup-kubectl@v1

      - name: Setup Kops
        uses: hiberbee/github-action-kops@latest
        with:
          command: export kubeconfig duckhue01.k8s.local --admin
          cluster-name: $CLUSTER_NAME
          state-store: $STATE_BUCKET
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: $AWS_DEFAULT_REGION

      - name: Deploy image to EC2
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/ingress.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/issuer.yaml
